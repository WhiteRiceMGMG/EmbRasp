# プロジェクト名
TARGET = BareMetalRP2040

# ツールチェイン
CC = arm-none-eabi-gcc
AS = arm-none-eabi-as
LD = arm-none-eabi-ld
OBJCOPY = arm-none-eabi-objcopy
SIZE = arm-none-eabi-size
BIN2UF2 = bin2uf2

# ビルドディレクトリ
BUILD = build

# ソースファイル
SRCS = main.c startup.S

# 出力ファイル
ELF = $(BUILD)/$(TARGET).elf
BIN = $(BUILD)/$(TARGET).bin
UF2 = $(BUILD)/$(TARGET).uf2

# フラグ
CFLAGS = -Wall -O2 -nostdlib -mcpu=cortex-m0plus -mthumb -ffreestanding
LDFLAGS = -T link.ld -nostdlib -nostartfiles

# ディレクトリ作成
$(BUILD):
	mkdir -p $(BUILD)

# ビルド
all: $(BUILD) $(UF2)

$(ELF): $(SRCS)
	$(CC) $(CFLAGS) $(SRCS) -o $@ $(LDFLAGS)

$(BIN): $(ELF)
	$(OBJCOPY) -O binary $< $@

$(UF2): $(BIN)
	$(BIN2UF2) -i $< -o $@
	@echo "Build complete: $@"

# サイズ確認
size: $(ELF)
	$(SIZE) $<

# クリーン
clean:
	rm -rf $(BUILD)

.PHONY: all clean size
